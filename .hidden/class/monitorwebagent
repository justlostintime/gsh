Class Monitorwebagent  'This class is used by the monitor web App to check in backgraound if var changes'
''          It notifies the forground app when the website is down
''
Inherits Task

Private MonitorWebTimer As Timer
Public MonitorWebAddr As String = ""
Public ExpectedReturn As String = "" ' "*HTTP/1.1 200 OK*"
Static Public ControlVariable As String = "monweb"
Public MonitorTimeOut As Integer = 15 ' timeout in seconds
Public MonitorPollTime As Integer = 30000 ' time in milliseconds
Public MonitorNotifyEmail As String = ""
Public MonitorNotifyHost As String = ""
Public MonitorNotifyUser As String = ""
Public MonitorNotifyPwd As String = ""
Public MonitorNotifyPort As Integer = 0
Public MonitorMissedCount As Integer = 0
Private SendCount As Integer = 3            ' number of missed or incorrect responses before email sent
Private errorexit As Boolean = False

Private hClient As Httpclient

Public Sub main()

With sharedmem
    Use "gb.net", "gb.net.curl", "gb.pcre", "gb.net.smtp"
    .[controlvariable] = True    ' this creates or resets controlvariable when reset stops this task        
    MonitorWebTimer = New Timer As "monitorcheck" 
    MonitorWebTimer.Delay = MonitorPollTime
    MonitorWebTimer.enabled = True
    While .[ControlVariable] = True Or ErrorExit = True
        Wait 10.00
    Wend
    Print "MonitorWeb Agent: Exit monitor agent for ";; MonitorWebAddr
End With
End

Public Sub monitorcheck_timer()
'print "poll web address"

hclient = New Httpclient As "hclient"
hclient.URL = MonitorWebAddr
hClient.async = True
hClient.timeout = MonitorTimeOut
Try hClient.get()
If Error Then 
    sendemail("MonitorWeb agent Error:" & error.text & "" & error.where, True)
    Return
Endif

If hclient.status < 0 Then
 sendemail("MonitorWeb Server " & MonitorWebAddr & " Not responding correctly :" & hClient.reason, True)
Endif

End

Public Sub hClient_error()
    SendEmail("MonitorWeb error :" & MonitorWebAddr & " Response error :" & hclient.reason, True)
End

Public Sub hClient_finished()

Dim sBuffer As String = ""

If Lof(hclient) Then sBuffer = Read #hClient, Lof(hClient)

If ExpectedReturn <> "" And If Not regexp.match(sBuffer, ExpectedReturn, regexp.caseless) Then
      SendEmail("Unexpected Response from " & MonitorWebAddr & " Got='" & Left(sBuffer, 20) & "' Expected='" & ExpectedReturn & "'", False)
Else
    MonitorMissedCount = 0
    SendCount = 3
    'print MonitorWebAddr ;; "is alive!"
Endif

Catch
 SendEmail("MonitorWeb Internal Error:" & error.text & " " & error.where, True)
End

Sub SendEmail(message As String, HaltTask As Boolean)
    'Print "Sendmail"
    If Not HaltTask Then
        Inc MonitorMissedCount
        'print "Notify email = ";MonitorNotifyEmail
       
        If (MonitorMissedCount Mod sendcount) <> 0 Then Return
    
        sendcount = 20                      ' after first send then every 20
    Endif
    
    If MonitorNotifyEmail = "" Then
        Print
        Print "MonitorWeb Agent Message:"; message
        Return
    Endif
    
    Dim email As New Smtpclient
   
    email.host = MonitorNotifyHost
    If MonitorNotifyUser <> "" Then email.user = MonitorNotifyuser
    If MonitorNotifyPwd <> "" Then email.password = MonitorNotifyPwd
    email.from = MonitorNotifyEmail
    email.to.add(MonitorNotifyEmail)
    Email.Subject = "Host Not Responding " & MonitorWebAddr
    Email.Body = MonitorWebAddr & ":" & message
    'print "sending email"
    Email.send
    Wait
    
    If HaltTask Then errorexit = True
    
End

End Class
