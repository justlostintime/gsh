Sub ToStringArray(sResult as string[],...) 'Change anything to string[]
''ToStringArray    Creat a string array the content of arrays or collections
''          or objects/classes with the special _print function
''          returns string[] if found, empty array otherwise
''          $result contains the error text or "OK"

Dim vParms As Variant[]

With sharedmem

vParms = param.all
For Each v As Variant In vParms
    Select Case TypeOf(v)
        Case gb.object
            Select Case object.class(v).name

                Case "Variant[]"
                    for each vs as Variant in v
                        sResult.insert(ToStringArray(v))
                    next
                    
                case "String[]","Integer[]","Float[]","Long[]","Short[]","Single[]","Pointer[]","Byte[]","Date[]"
                       sResult.insert(v)
                       
                Case "Boolean[]"
                     for each c as boolean in v
                        sResult.add(iif(c=true,"True","False"))
                     next
                    
                Case "Collection"
                    For Each vs In v
                        sResult.add(quote(v.Key)&":")
                        sResult.insert(ToStringArray(sResult, v))
                    next
                    
                Case "Class"
                    sresult.add("Class:"& v.name)
                    sresult.add("Refs:"& v.count)
                    for each s as string in v.symbols
                        sResult.add("Symbol:"&s)
                    next
                    sResult.add("End Class")
                    
                Default
                    If object.class(v).exist("_export") Then
                        v._export()
                    Else
                        sResult.add("Object:"&v)
                    Endif
            End Select
            
        case gb.class
            sresult.add("Class:"& v.name)
            sresult.add("Refs:"& v.count)
            for each s as string in v.symbols
                sResult.add("Symbol:"&s)
            next
            sResult.add("End Class")
            
        case gb.boolean
            sResult.add(iif(c=false,"False","True"))
            
        Default
            try sResult.add(v)
            if error then 
              sResult.add(error.text)
            endif
            
        End Select
Next

End With

End
