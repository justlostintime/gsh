Sub filecount(...)
''' Count the number of files in specified directory
''' recursively
'' ftw - fast traverse (walk) a file tree
'' uses the system call ftw to count the number of files

' numOpenFds is the maximum number of file descriptors that will be open at any one time
'            they are used to open each directory depth wise, 64 is a good number

Extern ftw(dirpath As String, CalledFunction As Pointer, NumOpenFd As Integer) As Integer In "libc:6"
Extern nftw(dirpath As String, CalledFunction As Pointer, NumOpenFd As Integer, flags As Integer) As Integer In "libc:6"

Public FlagsText As String[] = ["File                        ", "Directory                   ", "Unreadable Dir              ", "Unstable File               ", "Sym Link                    ", "Dir All Subs Visited        ", "Sym Link Naming Non Existant"]
Public totalfiles As Long = 0
Public TotalDirectories As Long = 0
Public OpenFiles As Integer = 256
Dim DirPath As String = "."

  If param.count = 0 Then
     PrintInfo(DirPath)
     Return
  Endif

  For Each DirPath In param
   PrintInfo(DirPath)
  Next

'  nftw(User.home, ftwprocess2, 64, FTW_PHYS) ' only phsical files no symlinks
'  Print "NFTW: Total Directories =";; Format(TotalDirectories, "########0"), "Total Files =";; totalFiles
'
End

Private Sub PrintInfo(DirPAth As String)
  Print "File/Directory Count for : "; DirPath
  TotalDirectories = 0
  TotalFiles = 0
  FTW(DirPath, ftwprocess, OpenFiles)
  Print "FTW : Total Directories =";; Format(TotalDirectories, "########0"), "Total Files =";; totalFiles
End

Public Sub ftwProcess(fpath As String, sb As Pointer, typeflag As Integer) As Integer

'  Print Subst("Type = &1, FileName = [&2]", FlagsText[typeFlag], fPath)
  If typeflag = FTW_F Then Inc totalfiles
  If typeFlag = FTW_D Then Inc TotalDirectories
  Return FTW_CONTINUE

End

Public Sub ftwProcess2(fpath As String, sb As Pointer, typeflag As Integer, ftw_info As Pointer) As Integer

  If typeflag = FTW_F Then Inc totalfiles
  If typeFlag = FTW_D Then Inc TotalDirectories
  Return FTW_CONTINUE

End
'Flags for the fourth parameter to nftw
Enum FTW_PHYS = 1, FTW_MOUNT = 2, FTW_CHDIR = 4, FTW_DEPTH = 8, FTW_ACTIONRETVAL

'Values to be returned from callback function
Enum FTW_CONTINUE = 0, FTW_STOP = 1, FTW_SKIP_SUBTREE = 2, FTW_SKIP_SIBLINGS = 3

'Flags passed to the user callback function
Enum FTW_F, FTW_D, FTW_DNR, FTW_NS, FTW_SL, FTW_DP, FTW_SNL
'Regular file'Directory'UnReadable Directory 'Unstable file 'Symbolic link'nftw only, Directory, all subdirs have been visited'nftw only - Symbolic link naming non-existing file

Public Struct FTW
       base As Integer             '  offset of the filename (i.e., basename component) in the pathname given In fpath.
       level As Integer            '  level is the depth of fpath in the directory tree, relative To the root Of the tree(dirpath, which has depth 0).
End Struct