' Gambas module file

Public mProc0 As Process
Public mProc1 As Process
Public mTask0 As TestTask
Public mTaskWrite As File

Public Sub application_signal(sig As Integer)

  Print "Sig caught"; sig

End

Public Sub mRead0_read()

  With sharedmem
    Dim sInput As String
    sInput = Read #Last, -256
    Write #mTaskWrite, sInput
  End With

End

Public Sub mRead0_kill()
  'Print "Closed task pipe"

  Flush
  Wait
  Write #mTaskWrite, Chr(4)
  Flush #mTaskWrite
  Wait
  mTaskWrite.Close()

End

Public Sub Tasky_read(sInput As String)
  'Print "InText"; sInput

  Write #mProc1, sInput
  'mProc1.closeinput()

End

Public Sub Tasky_kill()
  ''Print "Tasky kill"

  mProc1.CloseInput()

End

Public Sub Tasky_error(msg As String)

  Print "tasky error"; msg

End

Public Sub Main()

  Dim data As String = "abcdefghijklmnopqrstuvwxyz\n"

  For i As Integer = 0 To 80
    data &= Str(i) & "abcdefghijklmnopqrstuvwxyz\n"
  Next

  SharedMem.BeginNamed("briangsh", 1512000)
  With Sharedmem
    mTaskWrite = Open Pipe "/tmp/testtask" For Write
    mProc1 = Exec ["less"] With .["$env"] For Write As "mRead1"
    mTask0 = New TestTask As "Tasky"
    mTask0.inpipename = "/tmp/testtask"
    Wait
    mProc0 = Exec ["cat"] With .["$env"] For Read Write As "mRead0"
    Write #mProc0, data
    mProc0.closeinput()

    While mProc0.state = process.running Or mProc1.state = process.running
      Wait
    Wend

  End With
  SharedMem.end()

End


